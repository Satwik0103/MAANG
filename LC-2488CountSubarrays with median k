class Solution {
public:
    int countSubarrays(vector<int>& nums, int k) {
        int n=nums.size();
        unordered_map<int, int> mp;
        mp[0] = 1;
        bool flag = false;
        int sum = 0;
        long long ans = 0;
        for (int i = 0; i < n; i++){
            if (nums[i] < k){
                sum--;
            }
            else if(nums[i]>k){
                sum++;
            }
            if (nums[i] == k){
                flag=true;
            }
            if (flag){
                  //Done for calculating left and right sub array
                ans += mp[sum] + mp[sum - 1];
               
            }
            else{
                mp[sum]++;
            }
            cout<<sum<<mp[sum]<<endl;
        }
    return ans;
    }
};
